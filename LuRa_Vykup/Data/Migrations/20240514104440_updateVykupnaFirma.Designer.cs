// <auto-generated />
using System;
using LuRa_Vykup.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LuRa_Vykup.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240514104440_updateVykupnaFirma")]
    partial class updateVykupnaFirma
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LuRa_Vykup.Models.Ceniky", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DanekI")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DanekII")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DanekIII")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DivocakI")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DivocakII")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DivocakIII")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("JelenI")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("JelenII")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("JelenIII")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Mena")
                        .HasColumnType("int");

                    b.Property<decimal>("MuflonI")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MuflonII")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MuflonIII")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nazev")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SikaI")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SikaII")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SikaIII")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SrnciI")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SrnciII")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SrnciIII")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ceniky");
                });

            modelBuilder.Entity("LuRa_Vykup.Models.DodaciListy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CisloDL")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DatumVystaveni")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDodavatel")
                        .HasColumnType("int");

                    b.Property<string>("IdUzivatele")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdDodavatel");

                    b.ToTable("DodaciListy");
                });

            modelBuilder.Entity("LuRa_Vykup.Models.Dodavatele", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CenikId")
                        .HasColumnType("int");

                    b.Property<string>("CisloM")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Dodavatel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("IdUzivatel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdVykupna")
                        .HasColumnType("int");

                    b.Property<string>("Telefon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CenikId");

                    b.HasIndex("IdVykupna");

                    b.ToTable("Dodavatele");
                });

            modelBuilder.Entity("LuRa_Vykup.Models.PokladniDoklady", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CisloDokladu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCenik")
                        .HasColumnType("int");

                    b.Property<int>("IdDodavatel")
                        .HasColumnType("int");

                    b.Property<string>("IdUzivatele")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCenik");

                    b.HasIndex("IdDodavatel");

                    b.ToTable("PokladniDoklady");
                });

            modelBuilder.Entity("LuRa_Vykup.Models.TestModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ZakaznikTest");
                });

            modelBuilder.Entity("LuRa_Vykup.Models.Traces", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CisloTraces")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdUzivatele")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Traces");
                });

            modelBuilder.Entity("LuRa_Vykup.Models.Vykup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("CenaKg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CenaKgPokladniDoklad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CisloM")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DatumVykupu")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DodaciListId")
                        .HasColumnType("int");

                    b.Property<int>("Druh")
                        .HasColumnType("int");

                    b.Property<int>("IdDodavatel")
                        .HasColumnType("int");

                    b.Property<int?>("IdPokladniDoklad")
                        .HasColumnType("int");

                    b.Property<int?>("IdTraces")
                        .HasColumnType("int");

                    b.Property<string>("IdUzivatele")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kategorie")
                        .HasColumnType("int");

                    b.Property<string>("Plomba")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Vaha")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VykupnaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DodaciListId");

                    b.HasIndex("IdDodavatel");

                    b.HasIndex("IdPokladniDoklad");

                    b.HasIndex("IdTraces");

                    b.HasIndex("VykupnaId");

                    b.ToTable("Vykup");
                });

            modelBuilder.Entity("LuRa_Vykup.Models.Vykupna", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CisloPopisne")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Firma")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Ico")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdUzivatel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mesto")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nazev")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Psc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ulice")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Vykupna");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("LuRa_Vykup.Models.DodaciListy", b =>
                {
                    b.HasOne("LuRa_Vykup.Models.Dodavatele", "Dodavatele")
                        .WithMany()
                        .HasForeignKey("IdDodavatel")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Dodavatele");
                });

            modelBuilder.Entity("LuRa_Vykup.Models.Dodavatele", b =>
                {
                    b.HasOne("LuRa_Vykup.Models.Ceniky", "Ceniky")
                        .WithMany()
                        .HasForeignKey("CenikId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LuRa_Vykup.Models.Vykupna", "Vykupna")
                        .WithMany()
                        .HasForeignKey("IdVykupna")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Ceniky");

                    b.Navigation("Vykupna");
                });

            modelBuilder.Entity("LuRa_Vykup.Models.PokladniDoklady", b =>
                {
                    b.HasOne("LuRa_Vykup.Models.Ceniky", "Ceniky")
                        .WithMany()
                        .HasForeignKey("IdCenik")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LuRa_Vykup.Models.Dodavatele", "Dodavatele")
                        .WithMany()
                        .HasForeignKey("IdDodavatel")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Ceniky");

                    b.Navigation("Dodavatele");
                });

            modelBuilder.Entity("LuRa_Vykup.Models.Vykup", b =>
                {
                    b.HasOne("LuRa_Vykup.Models.DodaciListy", "DodaciListy")
                        .WithMany()
                        .HasForeignKey("DodaciListId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("LuRa_Vykup.Models.Dodavatele", "Dodavatele")
                        .WithMany()
                        .HasForeignKey("IdDodavatel")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LuRa_Vykup.Models.PokladniDoklady", "PokladniDoklady")
                        .WithMany()
                        .HasForeignKey("IdPokladniDoklad")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("LuRa_Vykup.Models.Traces", "Traces")
                        .WithMany()
                        .HasForeignKey("IdTraces")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("LuRa_Vykup.Models.Vykupna", "Vykupna")
                        .WithMany()
                        .HasForeignKey("VykupnaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DodaciListy");

                    b.Navigation("Dodavatele");

                    b.Navigation("PokladniDoklady");

                    b.Navigation("Traces");

                    b.Navigation("Vykupna");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
